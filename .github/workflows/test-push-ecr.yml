name: TestPushECR

on:
  push:
    branches: ['main', 'production']

jobs:
  push-to-ecr-staging:
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: staging
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: v1.0.0
        run: |
          docker build --build-arg api_base_url=$API_BASE_URL -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  push-to-ecr-production:
    if: ${{ github.ref == 'refs/heads/production' }}
    environment:
      name: production
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v2
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          # IMAGE_TAG: v1.0.0
          # API_BASE_URL: https://www.youtube.com:1111/
          IMAGE_TAG: ${{ date +%s }}          
        run: |
          echo ${ date +%s }
          # docker build --build-arg api_base_url="$API_BASE_URL" -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
          # # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG